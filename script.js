// script.js

const optionNames = {
  gym: '–°–ø–æ—Ä—Ç–∑–∞–ª',
  store: '–ú–∞–≥–∞–∑–∏–Ω',
  school: '–®–∫–æ–ª–∞',
  park: '–ü–∞—Ä–∫',
  metro: '–ú–µ—Ç—Ä–æ'
};

const optionDescriptions = {
  gym: '–ù–∞—Å–∫–æ–ª—å–∫–æ –±–ª–∏–∑–∫–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–ø–æ—Ä—Ç–∑–∞–ª?',
  store: '–ù–∞–ª–∏—á–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ —Ä—è–¥–æ–º.',
  school: '–£–¥–∞–ª—ë–Ω–Ω–æ—Å—Ç—å –æ—Ç —à–∫–æ–ª—ã.',
  park: '–ù–∞—Å–∫–æ–ª—å–∫–æ –¥–∞–ª–µ–∫–æ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ –ø–∞—Ä–∫–∞?',
  metro: '–°–∫–æ–ª—å–∫–æ –∏–¥—Ç–∏/–µ—Ö–∞—Ç—å –¥–æ –º–µ—Ç—Ä–æ?'
};

const optionIcons = {
  gym: 'üí™',
  store: 'üõí',
  school: 'üè´',
  park: 'üå≥',
  metro: 'üöá'
};

const googleFieldIds = {
  mainPoint: 'entry.238863648', //
  mainTransport: 'entry.1012741268',
  mainTimeHour: 'entry.1781480881_hour',
  mainTimeMinute: 'entry.1781480881_minute',
  mainTimeSecond: 'entry.1781480881_second',
  email: 'entry.1225802928',

  gym: { //
    mode: 'entry.1854777219',
    hour: 'entry.457354206_hour',
    minute: 'entry.457354206_minute',
    second: 'entry.457354206_second'
  },
  metro: { //
    mode: 'entry.1923214073',
    hour: 'entry.476010799_hour',
    minute: 'entry.476010799_minute',
    second: 'entry.476010799_second'
  },
  store: { //
    mode: 'entry.1288816979',
    hour: 'entry.2018790031_hour',
    minute: 'entry.2018790031_minute',
    second: 'entry.2018790031_second'
  },
  school: { //
    mode: 'entry.1533824310',
    hour: 'entry.1246450309_hour',
    minute: 'entry.1246450309_minute',
    second: 'entry.1246450309_second'
  },
  park: { //
    mode: 'entry.934740461',
    hour: 'entry.410772820_hour',
    minute: 'entry.410772820_minute',
    second: 'entry.410772820_second'
  },
};

const form = document.getElementById('main-form');
const addOptionBtn = document.getElementById('add-option');
const additionalOptionsContainer = document.getElementById('additional-options');
const submitBtn = document.getElementById('submit-btn');
const modal = document.getElementById('email-modal');
const modalEmailInput = document.getElementById('modal-email');
const modalSendBtn = document.getElementById('modal-send-btn');
const emailInput = document.getElementById('modal-email');
const emailError = document.getElementById('email-error');

let selectedOptions = new Set();

function isValidEmail(email) {
  return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
}

addOptionBtn.addEventListener('click', () => {
  const selector = document.createElement('select');
  selector.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é</option>' +
    Object.entries(optionNames)
      .filter(([key]) => !selectedOptions.has(key))
      .map(([key, label]) => `<option value="${key}">${label}</option>`)
      .join('');

  selector.onchange = () => {
    const key = selector.value;
    if (!key || selectedOptions.has(key)) return;

    selectedOptions.add(key);
    selector.remove();

    const block = document.createElement('div');
    block.className = 'section';
    block.dataset.optionKey = key;

    block.innerHTML = `
  <label class="option-label">
    <span>${optionIcons[key]} ${optionNames[key]}</span>
    <button type="button" class="remove-option-btn" title="–£–¥–∞–ª–∏—Ç—å">‚úñ</button>
  </label>
  <div class="selectors">
    <div class="selector">
      <select name="${key}-transport">
        <option value="–ü–µ—à–∫–æ–º">–ü–µ—à–∫–æ–º</option>
        <option value="–ù–∞ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ">–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç</option>
        <option value="–ù–∞ –º–∞—à–∏–Ω–µ">–ú–∞—à–∏–Ω–∞</option>
      </select>
    </div>
    <div class="selector">
      <select name="${key}-time">
        ${[5, 10, 15, 20, 30, 45, 60, 90].map(t => `<option value="${t}">${t} –º–∏–Ω</option>`).join('')}
      </select>
    </div>
  </div>
  <small style="color: gray">${optionDescriptions[key]}</small>
`;

    const removeBtn = block.querySelector('.remove-option-btn');
    removeBtn.addEventListener('click', () => {
      selectedOptions.delete(key);
      block.remove();
      updateAddOptionButtonVisibility();
    });

    additionalOptionsContainer.appendChild(block);

    updateAddOptionButtonVisibility(); // –ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ —Å–Ω–æ–≤–∞ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ
  };

  additionalOptionsContainer.appendChild(selector);
  updateAddOptionButtonVisibility(); // —Å–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É –ø–æ–∫–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω
});

submitBtn.addEventListener('click', (e) => {
  e.preventDefault();
  const mainPoint = document.getElementById('main-point').value.trim();
  const mainTime = document.getElementById('main-time').value;
  const mainMode = document.getElementById('main-transport').value;

  if (!mainPoint || !mainTime || !mainMode) {
    alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–¥—Ä–µ—Å –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∞–∂–Ω–æ–π —Ç–æ—á–∫–∏.');
    return;
  }
  ym(102625735,'reachGoal','create_map')
  modal.classList.remove('hidden');
});


emailInput.addEventListener('input', () => {
  const email = emailInput.value.trim();
  if (isValidEmail(email)) {
    console.log(isValidEmail(email));
    emailError.style.display = 'none';
    modalSendBtn.disabled = false;
  } else {
    console.log(isValidEmail(email));
    emailError.style.display = 'block';
    modalSendBtn.disabled = true;
  }
});

modalSendBtn.addEventListener('click', () => {
  const email = modalEmailInput.value.trim();
  if (!email) {
    alert('–í–≤–µ–¥–∏—Ç–µ email.');
    return;
  }
  if (!isValidEmail(email)) {
    emailError.style.display = 'block';
    sendButton.disabled = true;
    return;
  }
  ym(102625735,'reachGoal','send_email')
  // –ü–æ–ª—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∞–¥—Ä–µ—Å –∏–∑ input —Å id main-point
  const mainPointValue = document.getElementById('main-point').value.trim();
  const mainTransportValue = document.getElementById('main-transport').value;
  const mainTimeValue = document.getElementById('main-time').value;
  if (!mainPointValue) {
    alert('–í–≤–µ–¥–∏—Ç–µ –≤–∞–∂–Ω—É—é —Ç–æ—á–∫—É.');
    return;
  }

  const form = document.createElement('form');
  form.action = 'https://docs.google.com/forms/u/0/d/e/1FAIpQLSd3kMQB3kH10KGg1ser3mxVWXjD8VxROxPhLK6MaPn946vGDA/formResponse';
  form.method = 'POST';
  form.target = 'hidden_iframe';

  function appendInput(name, value) {
    const input = document.createElement('input');
    input.type = 'hidden';
    input.name = name;
    input.value = value ?? '';
    form.appendChild(input);
  }

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
  appendInput(googleFieldIds.mainPoint, mainPointValue);
  appendInput(googleFieldIds.mainTransport, mainTransportValue);
  appendInput(googleFieldIds.mainTimeHour, '');
  appendInput(googleFieldIds.mainTimeMinute, mainTimeValue);
  appendInput(googleFieldIds.mainTimeSecond, '');
  appendInput(googleFieldIds.email, email);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ (—á–∞—Å—ã=0, —Å–µ–∫—É–Ω–¥—ã=0)
  function appendTimeFields(prefix, minutes) {
    appendInput(prefix.hour, '');
    appendInput(prefix.minute, minutes ?? '');
    appendInput(prefix.second, '');
  }

  // –û–ø—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ —Ñ–æ—Ä–º–µ –∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  const options = ['gym', 'metro', 'store', 'school', 'park'];

  options.forEach(optionKey => {
    // –ò—â–µ–º —Å–µ–ª–µ–∫—Ç—ã –ø–æ –∏–º–µ–Ω–∏
    const modeSelect = document.querySelector(`select[name="${optionKey}-transport"]`);
    const timeSelect = document.querySelector(`select[name="${optionKey}-time"]`);
    if (modeSelect && timeSelect) {
      console.log(optionKey, modeSelect.value, timeSelect.value);
      const modeValue = modeSelect.value || '';  // –Ω–∞–ø—Ä–∏–º–µ—Ä "–ü–µ—à–∫–æ–º"
      const timeValue = timeSelect.value || ''; // –º–∏–Ω—É—Ç—ã –∏–∑ —Å–µ–ª–µ–∫—Ç–∞

      appendInput(googleFieldIds[optionKey].mode, modeValue);
      appendTimeFields(googleFieldIds[optionKey], timeValue);
    } else {
      // –ï—Å–ª–∏ –¥–ª—è –æ–ø—Ü–∏–∏ –Ω–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–µ
      appendInput(googleFieldIds[optionKey].mode, '');
      appendTimeFields(googleFieldIds[optionKey], '');
    }
  });

  document.body.appendChild(form);
  form.submit();
  document.body.removeChild(form);

  //modal.classList.add('hidden');
  form.reset();
  //additionalOptionsContainer.innerHTML = '';
  selectedOptions.clear();
  updateAddOptionButtonVisibility();
  showSuccessMessage();
});


const mainPointInput = document.getElementById('main-point');
const mainModeSelect = document.getElementById('main-transport');
const mainTimeSelect = document.getElementById('main-time');

function checkMainFieldsFilled() {
  const isFilled = mainPointInput.value.trim() && mainModeSelect.value && mainTimeSelect.value;
  submitBtn.disabled = !isFilled;
}

function updateAddOptionButtonVisibility() {
  const hasUnchosenSelector = additionalOptionsContainer.querySelector('select:not([name])'); // –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–µ–ª–µ–∫—Ç—ã
  const remainingOptions = Object.keys(optionNames).filter(k => !selectedOptions.has(k));

  addOptionBtn.style.display = (!hasUnchosenSelector && remainingOptions.length > 0) ? 'inline-block' : 'none';
}

mainPointInput.addEventListener('input', checkMainFieldsFilled);
mainModeSelect.addEventListener('change', checkMainFieldsFilled);
mainTimeSelect.addEventListener('change', checkMainFieldsFilled);

// –ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
checkMainFieldsFilled();


const modalCloseBtn = document.querySelector('.modal-close-btn');

modalCloseBtn.addEventListener('click', () => {
  modal.classList.add('hidden');
});

const modalContent = document.getElementById('modal-content');

function showSuccessMessage() {
  ym(102625735,'reachGoal','form_success')
  const modal = document.getElementById('email-modal');
  const modalContent = modal.querySelector('.modal-content');
  const successMessage = document.getElementById('modal-success-message');

  modalContent.style.display = 'none';      // –°–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
  successMessage.style.display = 'block';   // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—Ö–∞

  // –ù–∞–≤–µ—Å–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –∫—Ä–µ—Å—Ç–∏–∫ –≤ successMessage
  const closeBtn = successMessage.querySelector('.modal-close-btn');
  closeBtn.onclick = () => {
    modal.classList.add('hidden');           // –°–∫—Ä—ã—Ç—å –≤—Å—é –º–æ–¥–∞–ª–∫—É
    modalContent.style.display = 'block';   // –í–µ—Ä–Ω—É—Ç—å —Ñ–æ—Ä–º—É –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    successMessage.style.display = 'none';  // –°–∫—Ä—ã—Ç—å successMessage –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–∞–∑–∞
  };
}